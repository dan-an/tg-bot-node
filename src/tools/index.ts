import { EventsMap, ProcessedEvent } from '@/types';

export const chooseRandomElement = (arr: any[]) => {
    return arr[Math.floor(Math.random() * arr.length)];
};

export const generateBirthdayMessage = (data: EventsMap): string => {
    const sections: { [key: string]: ProcessedEvent[] } = {
        –°–µ–≥–æ–¥–Ω—è: data.today,
        –ó–∞–≤—Ç—Ä–∞: data.tomorrow,
        '–í –±–ª–∏–∂–∞–π—à–∏–µ —Ç—Ä–∏ –¥–Ω—è': data.inThreeDays,
        '–í –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é': data.inOneWeek,
        '–í –±–ª–∏–∂–∞–π—à–∏–µ –¥–≤–µ –Ω–µ–¥–µ–ª–∏': data.inTwoWeeks,
        '–í –±–ª–∏–∂–∞–π—à–∏–µ —Ç—Ä–∏ –Ω–µ–¥–µ–ª–∏': data.inThreeWeeks,
    };

    let message = 'üéâ –ù–∞–ø–æ–º–∏–Ω–∞—é –æ –±–ª–∏–∂–∞–π—à–∏—Ö –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è:\n\n';

    for (const [title, events] of Object.entries(sections)) {
        if (events.length === 0) {
            message = '';
        } else {
            message += `${title}:\n`;
            events.forEach((event) => {
                message += `- ${event.date} ${event.summary}\n`;
            });
            message += '\n'; // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏
        }
    }

    return message.trim();
};
