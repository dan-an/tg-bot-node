import { TelegramBot } from '@/types/telegram';
import { addPendingUser, getUserStatus } from '@/services/db/moderation';
import { sendMessage } from '@/services/tg/tools';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–µ—à–∞–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –æ–Ω –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.
 *
 * - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–¥–æ–±—Ä–µ–Ω (`approved`) ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true.
 * - –ï—Å–ª–∏ `pending` –∏–ª–∏ `rejected` ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 * - –ï—Å–ª–∏ –Ω–æ–≤—ã–π ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–∞–∑—É, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
 *
 * @param message - –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram —Å –ø–æ–ª–µ–º `from`
 * @returns true ‚Äî –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–¥–æ–±—Ä–µ–Ω, –∏–Ω–∞—á–µ false
 */
export const checkAccess = async (message: TelegramBot.Message): Promise<boolean> => {
    if (!message.from) return false;

    const from = message.from;
    const status = getUserStatus(from.id);

    const messageToSend: Partial<TelegramBot.SendMessageParams> = {
        chat_id: from.id,
    };

    switch (status) {
        case 'approved':
            return true;

        case 'rejected':
            messageToSend.text = 'üö´ –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –∑–∞–ø—Ä–µ—â—ë–Ω.';
            break;

        case 'pending':
            messageToSend.text = '‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è.';
            break;

        default:
            addPendingUser(from);
            messageToSend.text = '‚è≥ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.';

            await sendMessage({
                chat_id: Number(process.env.TELEGRAM_ADMIN_ID),
                text: `üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n–ò–º—è: ${from.first_name}\nID: ${from.id}\nUsername: ${from.username ?? '‚Äî'}\n\n–†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ—Å—Ç—É–ø?`,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: '‚úÖ –î–∞',
                                callback_data: JSON.stringify({ command: 'approve', user_id: from.id }),
                            },
                            {
                                text: '‚ùå –ù–µ—Ç',
                                callback_data: JSON.stringify({ command: 'reject', user_id: from.id }),
                            },
                        ],
                    ],
                },
            });
    }

    if (messageToSend.chat_id && messageToSend.text) {
        await sendMessage(messageToSend as TelegramBot.SendMessageParams);
    }

    return false;
};
